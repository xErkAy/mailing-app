version: "3.3"

services:
  db:
    container_name: ${PROJECT:-backend}_db
    image: postgres:14-alpine3.16
    environment:
      - POSTGRES_DB=${DB_NAME:-backend_db}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    restart: always
    networks:
      - bridge
  redis:
    container_name: ${PROJECT:-backend}_redis
    image: redis:7.0.11-alpine3.17
    ports:
      - "${REDIS_PORT:-6379}:6379"
    restart: always
    networks:
      - bridge
  django:
    &django
    container_name: ${PROJECT:-backend}_django
    image: ${PROJECT:-backend}-django:latest
    build: ./backend
    volumes:
      - ./backend:/backend
      - ./backend/static:/backend/static
      - ./backend/${LOGS_DIR:-logs}:/backend/${LOGS_DIR:-logs}
    ports:
      - "${DJANGO_PORT:-8000}:8000"
    env_file:
      - ./.env
    depends_on:
      - db
    restart: always
    networks:
      - bridge
  celery:
    <<: *django
    container_name: ${PROJECT:-backend}_celery
    entrypoint: /backend/celery-entrypoint.sh
    ports: []
    depends_on:
      - django
  nginx:
    container_name: ${PROJECT:-backend}_nginx
    image: ${PROJECT:-backend}-nginx:latest
    build: nginx
    volumes:
      - ./backend/static:/backend/static
      - ./backend/media:/backend/media
    ports:
      - "${NGINX_PORT:-80}:80"
    restart: always
    networks:
      - bridge

networks:
  bridge:
    driver: bridge

volumes:
  pgdata:
